{"ast":null,"code":"var _jsxFileName = \"/Users/jerryxia/Documents/PersonalProjects/Portfolio/r3f-blog/src/components/blog/Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Heading } from \"@radix-ui/themes\";\nimport BlogsPerYear from \"./components/BlogsPerYear\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  };\n  return date.toLocaleDateString(undefined, options);\n}\nfunction formatDateMMDD(dateString) {\n  const date = new Date(dateString);\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  return `${month.toString().padStart(2, \"0\")}/${day.toString().padStart(2, \"0\")}`;\n}\nfunction Blog() {\n  _s();\n  const [postsData, setPostsData] = useState([]);\n  useEffect(() => {\n    fetch(\"/posts/posts.json\").then(response => response.json()).then(posts => {\n      const formattedPosts = posts.map(post => ({\n        ...post,\n        publishedAt: formatDate(post.publishedAt),\n        publishedAtMMDD: formatDateMMDD(post.publishedAt)\n      }));\n      setPostsData(formattedPosts.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)));\n    });\n  }, []);\n  const postsByYear = postsData.reduce((acc, post) => {\n    const year = new Date(post.publishedAt).getFullYear();\n    if (!acc[year]) {\n      acc[year] = [];\n    }\n    acc[year].push(post);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    gap: \"6\",\n    direction: \"column\",\n    style: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Read my blog:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      children: Object.entries(postsByYear).sort((a, b) => b[0] - a[0]).map(([year, posts]) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(BlogsPerYear, {\n          posts: posts,\n          year: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Blog, \"xcN1JQRfxYgwe2dIbXazSJ7Bp4M=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","Flex","Heading","BlogsPerYear","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","options","year","month","day","toLocaleDateString","undefined","formatDateMMDD","getMonth","getDate","toString","padStart","Blog","_s","postsData","setPostsData","fetch","then","response","json","posts","formattedPosts","map","post","publishedAt","publishedAtMMDD","sort","a","b","postsByYear","reduce","acc","getFullYear","push","gap","direction","style","width","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","Fragment","_c","$RefreshReg$"],"sources":["/Users/jerryxia/Documents/PersonalProjects/Portfolio/r3f-blog/src/components/blog/Blog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Flex, Heading } from \"@radix-ui/themes\";\nimport BlogsPerYear from \"./components/BlogsPerYear\";\n\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  return date.toLocaleDateString(undefined, options);\n}\n\nfunction formatDateMMDD(dateString) {\n  const date = new Date(dateString);\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  return `${month.toString().padStart(2, \"0\")}/${day\n    .toString()\n    .padStart(2, \"0\")}`;\n}\n\nfunction Blog() {\n  const [postsData, setPostsData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/posts/posts.json\")\n      .then((response) => response.json())\n      .then((posts) => {\n        const formattedPosts = posts.map((post) => ({\n          ...post,\n          publishedAt: formatDate(post.publishedAt),\n          publishedAtMMDD: formatDateMMDD(post.publishedAt),\n        }));\n\n        setPostsData(\n          formattedPosts.sort(\n            (a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)\n          )\n        );\n      });\n  }, []);\n\n  const postsByYear = postsData.reduce((acc, post) => {\n    const year = new Date(post.publishedAt).getFullYear();\n    if (!acc[year]) {\n      acc[year] = [];\n    }\n    acc[year].push(post);\n    return acc;\n  }, {});\n\n  return (\n    <Flex gap=\"6\" direction=\"column\" style={{ width: \"100%\" }}>\n      <Heading>Read my blog:</Heading>\n      <Flex direction=\"column\">\n        {Object.entries(postsByYear)\n          .sort((a, b) => b[0] - a[0])\n          .map(([year, posts]) => (\n            <React.Fragment key={year}>\n              <BlogsPerYear posts={posts} year={year} />\n            </React.Fragment>\n          ))}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default Blog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}