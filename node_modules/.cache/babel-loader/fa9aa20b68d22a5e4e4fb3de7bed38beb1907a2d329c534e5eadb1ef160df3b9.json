{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport { avatarPropDefs } from './avatar.props';\nimport { extractMarginProps, withMarginProps, withBreakpoints } from '../helpers';\nconst Avatar = React.forwardRef((props, forwardedRef) => {\n  const {\n    rest: marginRest,\n    ...marginProps\n  } = extractMarginProps(props);\n  const {\n    className,\n    style,\n    size = avatarPropDefs.size.default,\n    variant = avatarPropDefs.variant.default,\n    color = avatarPropDefs.color.default,\n    highContrast = avatarPropDefs.highContrast.default,\n    radius = avatarPropDefs.radius.default,\n    fallback,\n    ...imageProps\n  } = marginRest;\n  const [status, setStatus] = React.useState('idle');\n  return React.createElement(AvatarPrimitive.Root, {\n    \"data-accent-color\": color,\n    \"data-radius\": radius,\n    className: classNames('rt-AvatarRoot', className, withBreakpoints(size, 'rt-r-size'), `rt-variant-${variant}`, {\n      'rt-high-contrast': highContrast\n    }, withMarginProps(marginProps)),\n    style: style\n  }, status === 'idle' || status === 'loading' ? React.createElement(\"span\", {\n    className: \"rt-AvatarFallback\"\n  }) : null, status === 'error' ? React.createElement(AvatarPrimitive.Fallback, {\n    className: classNames('rt-AvatarFallback', {\n      'rt-one-letter': typeof fallback === 'string' && fallback.length === 1,\n      'rt-two-letters': typeof fallback === 'string' && fallback.length === 2\n    }),\n    delayMs: 0\n  }, fallback) : null, React.createElement(AvatarPrimitive.Image, {\n    ref: forwardedRef,\n    className: \"rt-AvatarImage\",\n    ...imageProps,\n    onLoadingStatusChange: status => {\n      var _a;\n      (_a = imageProps.onLoadingStatusChange) === null || _a === void 0 ? void 0 : _a.call(imageProps, status);\n      setStatus(status);\n    }\n  }));\n});\nAvatar.displayName = 'Avatar';\nexport { Avatar };\n//# sourceMappingURL=avatar.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}