{"ast":null,"code":"import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from './slot';\nimport { flexPropDefs } from './flex.props';\nimport { extractMarginProps, withMarginProps, extractLayoutProps, withLayoutProps, withBreakpoints } from '../helpers';\nconst Flex = React.forwardRef((props, forwardedRef) => {\n  const {\n    rest: marginRest,\n    ...marginProps\n  } = extractMarginProps(props);\n  const {\n    rest: layoutRest,\n    ...layoutProps\n  } = extractLayoutProps(marginRest);\n  const {\n    className,\n    asChild,\n    display = flexPropDefs.display.default,\n    direction = flexPropDefs.direction.default,\n    align = flexPropDefs.align.default,\n    justify = flexPropDefs.justify.default,\n    wrap = flexPropDefs.wrap.default,\n    gap = flexPropDefs.gap.default,\n    ...flexProps\n  } = layoutRest;\n  const Comp = asChild ? Slot : 'div';\n  return React.createElement(Comp, {\n    ...flexProps,\n    ref: forwardedRef,\n    className: classNames('rt-Flex', className, withBreakpoints(display, 'rt-r-display'), withBreakpoints(direction, 'rt-r-fd'), withBreakpoints(align, 'rt-r-ai'), withBreakpoints(justify, 'rt-r-jc', {\n      between: 'space-between'\n    }), withBreakpoints(wrap, 'rt-r-fw'), withBreakpoints(gap, 'rt-r-gap'), withLayoutProps(layoutProps), withMarginProps(marginProps))\n  });\n});\nFlex.displayName = 'Flex';\nexport { Flex };\n//# sourceMappingURL=flex.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}