{"ast":null,"code":"import * as React from 'react';\nimport classNames from 'classnames';\nimport { tableRootPropDefs, tableRowPropDefs, tableCellPropDefs } from './table.props';\nimport { extractMarginProps, withMarginProps, extractPaddingProps, withPaddingProps, withBreakpoints } from '../helpers';\nimport { ScrollArea } from './scroll-area';\nconst TableRoot = React.forwardRef((props, forwardedRef) => {\n  const {\n    rest: marginRest,\n    ...marginProps\n  } = extractMarginProps(props);\n  const {\n    className,\n    children,\n    size = tableRootPropDefs.size.default,\n    variant = tableRootPropDefs.variant.default,\n    ...rootProps\n  } = marginRest;\n  return React.createElement(\"div\", {\n    ref: forwardedRef,\n    className: classNames('rt-TableRoot', className, `rt-variant-${variant}`, withBreakpoints(size, 'rt-r-size'), withMarginProps(marginProps)),\n    ...rootProps\n  }, React.createElement(ScrollArea, null, React.createElement(\"table\", {\n    className: \"rt-TableRootTable\"\n  }, children)));\n});\nTableRoot.displayName = 'Table';\nconst TableHeader = React.forwardRef((props, forwardedRef) => React.createElement(\"thead\", {\n  ...props,\n  ref: forwardedRef,\n  className: classNames('rt-TableHeader', props.className)\n}));\nTableHeader.displayName = 'TableHeader';\nconst TableBody = React.forwardRef((props, forwardedRef) => React.createElement(\"tbody\", {\n  ...props,\n  ref: forwardedRef,\n  className: classNames('rt-TableBody', props.className)\n}));\nTableBody.displayName = 'TableBody';\nconst TableRow = React.forwardRef((props, forwardedRef) => {\n  const {\n    className,\n    align = tableRowPropDefs.align.default,\n    ...rowProps\n  } = props;\n  return React.createElement(\"tr\", {\n    ...rowProps,\n    ref: forwardedRef,\n    className: classNames('rt-TableRow', className, withBreakpoints(align, 'rt-r-va', {\n      baseline: 'baseline',\n      start: 'top',\n      center: 'middle',\n      end: 'bottom'\n    }))\n  });\n});\nTableRow.displayName = 'TableRow';\nconst TableCellImpl = React.forwardRef((props, forwardedRef) => {\n  const {\n    rest: paddingRest,\n    ...paddingProps\n  } = extractPaddingProps(props);\n  const {\n    tag: Tag = 'td',\n    className,\n    style,\n    justify = tableCellPropDefs.justify.default,\n    width = tableCellPropDefs.width.default,\n    ...cellProps\n  } = paddingRest;\n  return React.createElement(Tag, {\n    ...cellProps,\n    ref: forwardedRef,\n    className: classNames('rt-TableCell', className, withPaddingProps(paddingProps), withBreakpoints(justify, 'rt-r-ta', {\n      start: 'left',\n      center: 'center',\n      end: 'right'\n    })),\n    style: {\n      width,\n      ...style\n    }\n  });\n});\nTableCellImpl.displayName = 'TableCellImpl';\nconst TableCell = React.forwardRef((props, forwardedRef) => React.createElement(TableCellImpl, {\n  ...props,\n  tag: \"td\",\n  ref: forwardedRef\n}));\nTableCell.displayName = 'TableCell';\nconst TableColumnHeaderCell = React.forwardRef((props, forwardedRef) => React.createElement(TableCellImpl, {\n  scope: \"col\",\n  ...props,\n  tag: \"th\",\n  ref: forwardedRef,\n  className: classNames('rt-TableColumnHeaderCell', props.className)\n}));\nTableColumnHeaderCell.displayName = 'TableColumnHeaderCell';\nconst TableRowHeaderCell = React.forwardRef((props, forwardedRef) => React.createElement(TableCellImpl, {\n  scope: \"row\",\n  ...props,\n  tag: \"th\",\n  ref: forwardedRef,\n  className: classNames('rt-TableRowHeaderCell', props.className)\n}));\nTableRowHeaderCell.displayName = 'TableRowHeaderCell';\nconst Table = Object.assign({}, {\n  Root: TableRoot,\n  Header: TableHeader,\n  Body: TableBody,\n  Row: TableRow,\n  Cell: TableCell,\n  ColumnHeaderCell: TableColumnHeaderCell,\n  RowHeaderCell: TableRowHeaderCell\n});\nexport { Table, TableRoot, TableHeader, TableBody, TableRow, TableCell, TableColumnHeaderCell, TableRowHeaderCell };\n//# sourceMappingURL=table.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}