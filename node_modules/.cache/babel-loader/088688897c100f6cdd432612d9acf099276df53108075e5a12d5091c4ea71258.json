{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as SliderPrimitive from '@radix-ui/react-slider';\nimport { sliderPropDefs } from './slider.props';\nimport { extractMarginProps, withMarginProps, withBreakpoints } from '../helpers';\nconst Slider = React.forwardRef((props, forwardedRef) => {\n  var _a, _b;\n  const {\n    rest: marginRest,\n    ...marginProps\n  } = extractMarginProps(props);\n  const {\n    className,\n    size = sliderPropDefs.size.default,\n    variant = sliderPropDefs.variant.default,\n    color = sliderPropDefs.color.default,\n    highContrast = sliderPropDefs.highContrast.default,\n    radius = sliderPropDefs.radius.default,\n    tabIndex,\n    ...sliderProps\n  } = marginRest;\n  return React.createElement(SliderPrimitive.Root, {\n    \"data-accent-color\": color,\n    \"data-radius\": radius,\n    ref: forwardedRef,\n    ...sliderProps,\n    className: classNames('rt-SliderRoot', className, withBreakpoints(size, 'rt-r-size'), `rt-variant-${variant}`, {\n      'rt-high-contrast': highContrast\n    }, withMarginProps(marginProps))\n  }, React.createElement(SliderPrimitive.Track, {\n    className: \"rt-SliderTrack\"\n  }, React.createElement(SliderPrimitive.Range, {\n    className: \"rt-SliderRange\",\n    \"data-inverted\": sliderProps.inverted ? '' : undefined\n  })), ((_b = (_a = sliderProps.value) !== null && _a !== void 0 ? _a : sliderProps.defaultValue) !== null && _b !== void 0 ? _b : []).map((value, index) => React.createElement(SliderPrimitive.Thumb, {\n    key: index,\n    className: \"rt-SliderThumb\",\n    ...(tabIndex !== undefined ? {\n      tabIndex\n    } : undefined)\n  })));\n});\nSlider.displayName = 'Slider';\nexport { Slider };\n//# sourceMappingURL=slider.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}