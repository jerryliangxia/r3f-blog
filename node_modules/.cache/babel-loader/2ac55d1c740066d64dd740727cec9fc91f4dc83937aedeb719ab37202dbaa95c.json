{"ast":null,"code":"import $g1Vy2$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $g1Vy2$forwardRef, useState as $g1Vy2$useState, useRef as $g1Vy2$useRef, createElement as $g1Vy2$createElement, useMemo as $g1Vy2$useMemo, useEffect as $g1Vy2$useEffect } from \"react\";\nimport { clamp as $g1Vy2$clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers as $g1Vy2$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs as $g1Vy2$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $g1Vy2$createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState as $g1Vy2$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useDirection as $g1Vy2$useDirection } from \"@radix-ui/react-direction\";\nimport { usePrevious as $g1Vy2$usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize as $g1Vy2$useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive as $g1Vy2$Primitive } from \"@radix-ui/react-primitive\";\nimport { createCollection as $g1Vy2$createCollection } from \"@radix-ui/react-collection\";\nconst $faa2e61a3361514f$var$PAGE_KEYS = ['PageUp', 'PageDown'];\nconst $faa2e61a3361514f$var$ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\nconst $faa2e61a3361514f$var$BACK_KEYS = {\n  'from-left': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-right': ['Home', 'PageDown', 'ArrowDown', 'ArrowRight'],\n  'from-bottom': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-top': ['Home', 'PageDown', 'ArrowUp', 'ArrowLeft']\n};\n/* -------------------------------------------------------------------------------------------------\n * Slider\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$SLIDER_NAME = 'Slider';\nconst [$faa2e61a3361514f$var$Collection, $faa2e61a3361514f$var$useCollection, $faa2e61a3361514f$var$createCollectionScope] = $g1Vy2$createCollection($faa2e61a3361514f$var$SLIDER_NAME);\nconst [$faa2e61a3361514f$var$createSliderContext, $faa2e61a3361514f$export$ef72632d7b901f97] = $g1Vy2$createContextScope($faa2e61a3361514f$var$SLIDER_NAME, [$faa2e61a3361514f$var$createCollectionScope]);\nconst [$faa2e61a3361514f$var$SliderProvider, $faa2e61a3361514f$var$useSliderContext] = $faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME);\nconst $faa2e61a3361514f$export$472062a354075cee = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    name: name,\n    min = 0,\n    max = 100,\n    step = 1,\n    orientation = 'horizontal',\n    disabled = false,\n    minStepsBetweenThumbs = 0,\n    defaultValue = [min],\n    value: value1,\n    onValueChange = () => {},\n    onValueCommit = () => {},\n    inverted = false,\n    ...sliderProps\n  } = props;\n  const [slider, setSlider] = $g1Vy2$useState(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, node => setSlider(node));\n  const thumbRefs = $g1Vy2$useRef(new Set());\n  const valueIndexToChangeRef = $g1Vy2$useRef(0);\n  const isHorizontal = orientation === 'horizontal'; // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = slider ? Boolean(slider.closest('form')) : true;\n  const SliderOrientation = isHorizontal ? $faa2e61a3361514f$var$SliderHorizontal : $faa2e61a3361514f$var$SliderVertical;\n  const [values = [], setValues] = $g1Vy2$useControllableState({\n    prop: value1,\n    defaultProp: defaultValue,\n    onChange: value => {\n      var _thumbs$valueIndexToC;\n      const thumbs = [...thumbRefs.current];\n      (_thumbs$valueIndexToC = thumbs[valueIndexToChangeRef.current]) === null || _thumbs$valueIndexToC === void 0 || _thumbs$valueIndexToC.focus();\n      onValueChange(value);\n    }\n  });\n  const valuesBeforeSlideStartRef = $g1Vy2$useRef(values);\n  function handleSlideStart(value) {\n    const closestIndex = $faa2e61a3361514f$var$getClosestValueIndex(values, value);\n    updateValues(value, closestIndex);\n  }\n  function handleSlideMove(value) {\n    updateValues(value, valueIndexToChangeRef.current);\n  }\n  function handleSlideEnd() {\n    const prevValue = valuesBeforeSlideStartRef.current[valueIndexToChangeRef.current];\n    const nextValue = values[valueIndexToChangeRef.current];\n    const hasChanged = nextValue !== prevValue;\n    if (hasChanged) onValueCommit(values);\n  }\n  function updateValues(value, atIndex, {\n    commit: commit\n  } = {\n    commit: false\n  }) {\n    const decimalCount = $faa2e61a3361514f$var$getDecimalCount(step);\n    const snapToStep = $faa2e61a3361514f$var$roundValue(Math.round((value - min) / step) * step + min, decimalCount);\n    const nextValue = $g1Vy2$clamp(snapToStep, [min, max]);\n    setValues((prevValues = []) => {\n      const nextValues = $faa2e61a3361514f$var$getNextSortedValues(prevValues, nextValue, atIndex);\n      if ($faa2e61a3361514f$var$hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {\n        valueIndexToChangeRef.current = nextValues.indexOf(nextValue);\n        const hasChanged = String(nextValues) !== String(prevValues);\n        if (hasChanged && commit) onValueCommit(nextValues);\n        return hasChanged ? nextValues : prevValues;\n      } else return prevValues;\n    });\n  }\n  return /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderProvider, {\n    scope: props.__scopeSlider,\n    disabled: disabled,\n    min: min,\n    max: max,\n    valueIndexToChangeRef: valueIndexToChangeRef,\n    thumbs: thumbRefs.current,\n    values: values,\n    orientation: orientation\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$Collection.Provider, {\n    scope: props.__scopeSlider\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$Collection.Slot, {\n    scope: props.__scopeSlider\n  }, /*#__PURE__*/$g1Vy2$createElement(SliderOrientation, $g1Vy2$babelruntimehelpersesmextends({\n    \"aria-disabled\": disabled,\n    \"data-disabled\": disabled ? '' : undefined\n  }, sliderProps, {\n    ref: composedRefs,\n    onPointerDown: $g1Vy2$composeEventHandlers(sliderProps.onPointerDown, () => {\n      if (!disabled) valuesBeforeSlideStartRef.current = values;\n    }),\n    min: min,\n    max: max,\n    inverted: inverted,\n    onSlideStart: disabled ? undefined : handleSlideStart,\n    onSlideMove: disabled ? undefined : handleSlideMove,\n    onSlideEnd: disabled ? undefined : handleSlideEnd,\n    onHomeKeyDown: () => !disabled && updateValues(min, 0, {\n      commit: true\n    }),\n    onEndKeyDown: () => !disabled && updateValues(max, values.length - 1, {\n      commit: true\n    }),\n    onStepKeyDown: ({\n      event: event,\n      direction: stepDirection\n    }) => {\n      if (!disabled) {\n        const isPageKey = $faa2e61a3361514f$var$PAGE_KEYS.includes(event.key);\n        const isSkipKey = isPageKey || event.shiftKey && $faa2e61a3361514f$var$ARROW_KEYS.includes(event.key);\n        const multiplier = isSkipKey ? 10 : 1;\n        const atIndex = valueIndexToChangeRef.current;\n        const value = values[atIndex];\n        const stepInDirection = step * multiplier * stepDirection;\n        updateValues(value + stepInDirection, atIndex, {\n          commit: true\n        });\n      }\n    }\n  })))), isFormControl && values.map((value, index) => /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$BubbleInput, {\n    key: index,\n    name: name ? name + (values.length > 1 ? '[]' : '') : undefined,\n    value: value\n  })));\n});\n/*#__PURE__*/\nObject.assign($faa2e61a3361514f$export$472062a354075cee, {\n  displayName: $faa2e61a3361514f$var$SLIDER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderHorizontal\n * -----------------------------------------------------------------------------------------------*/\nconst [$faa2e61a3361514f$var$SliderOrientationProvider, $faa2e61a3361514f$var$useSliderOrientationContext] = $faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME, {\n  startEdge: 'left',\n  endEdge: 'right',\n  size: 'width',\n  direction: 1\n});\nconst $faa2e61a3361514f$var$SliderHorizontal = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    min: min,\n    max: max,\n    dir: dir,\n    inverted: inverted,\n    onSlideStart: onSlideStart,\n    onSlideMove: onSlideMove,\n    onSlideEnd: onSlideEnd,\n    onStepKeyDown: onStepKeyDown,\n    ...sliderProps\n  } = props;\n  const [slider, setSlider] = $g1Vy2$useState(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, node => setSlider(node));\n  const rectRef = $g1Vy2$useRef();\n  const direction = $g1Vy2$useDirection(dir);\n  const isDirectionLTR = direction === 'ltr';\n  const isSlidingFromLeft = isDirectionLTR && !inverted || !isDirectionLTR && inverted;\n  function getValueFromPointer(pointerPosition) {\n    const rect = rectRef.current || slider.getBoundingClientRect();\n    const input = [0, rect.width];\n    const output = isSlidingFromLeft ? [min, max] : [max, min];\n    const value = $faa2e61a3361514f$var$linearScale(input, output);\n    rectRef.current = rect;\n    return value(pointerPosition - rect.left);\n  }\n  return /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderOrientationProvider, {\n    scope: props.__scopeSlider,\n    startEdge: isSlidingFromLeft ? 'left' : 'right',\n    endEdge: isSlidingFromLeft ? 'right' : 'left',\n    direction: isSlidingFromLeft ? 1 : -1,\n    size: \"width\"\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderImpl, $g1Vy2$babelruntimehelpersesmextends({\n    dir: direction,\n    \"data-orientation\": \"horizontal\"\n  }, sliderProps, {\n    ref: composedRefs,\n    style: {\n      ...sliderProps.style,\n      ['--radix-slider-thumb-transform']: 'translateX(-50%)'\n    },\n    onSlideStart: event => {\n      const value = getValueFromPointer(event.clientX);\n      onSlideStart === null || onSlideStart === void 0 || onSlideStart(value);\n    },\n    onSlideMove: event => {\n      const value = getValueFromPointer(event.clientX);\n      onSlideMove === null || onSlideMove === void 0 || onSlideMove(value);\n    },\n    onSlideEnd: () => {\n      rectRef.current = undefined;\n      onSlideEnd === null || onSlideEnd === void 0 || onSlideEnd();\n    },\n    onStepKeyDown: event => {\n      const slideDirection = isSlidingFromLeft ? 'from-left' : 'from-right';\n      const isBackKey = $faa2e61a3361514f$var$BACK_KEYS[slideDirection].includes(event.key);\n      onStepKeyDown === null || onStepKeyDown === void 0 || onStepKeyDown({\n        event: event,\n        direction: isBackKey ? -1 : 1\n      });\n    }\n  })));\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderVertical\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$SliderVertical = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    min: min,\n    max: max,\n    inverted: inverted,\n    onSlideStart: onSlideStart,\n    onSlideMove: onSlideMove,\n    onSlideEnd: onSlideEnd,\n    onStepKeyDown: onStepKeyDown,\n    ...sliderProps\n  } = props;\n  const sliderRef = $g1Vy2$useRef(null);\n  const ref = $g1Vy2$useComposedRefs(forwardedRef, sliderRef);\n  const rectRef = $g1Vy2$useRef();\n  const isSlidingFromBottom = !inverted;\n  function getValueFromPointer(pointerPosition) {\n    const rect = rectRef.current || sliderRef.current.getBoundingClientRect();\n    const input = [0, rect.height];\n    const output = isSlidingFromBottom ? [max, min] : [min, max];\n    const value = $faa2e61a3361514f$var$linearScale(input, output);\n    rectRef.current = rect;\n    return value(pointerPosition - rect.top);\n  }\n  return /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderOrientationProvider, {\n    scope: props.__scopeSlider,\n    startEdge: isSlidingFromBottom ? 'bottom' : 'top',\n    endEdge: isSlidingFromBottom ? 'top' : 'bottom',\n    size: \"height\",\n    direction: isSlidingFromBottom ? 1 : -1\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderImpl, $g1Vy2$babelruntimehelpersesmextends({\n    \"data-orientation\": \"vertical\"\n  }, sliderProps, {\n    ref: ref,\n    style: {\n      ...sliderProps.style,\n      ['--radix-slider-thumb-transform']: 'translateY(50%)'\n    },\n    onSlideStart: event => {\n      const value = getValueFromPointer(event.clientY);\n      onSlideStart === null || onSlideStart === void 0 || onSlideStart(value);\n    },\n    onSlideMove: event => {\n      const value = getValueFromPointer(event.clientY);\n      onSlideMove === null || onSlideMove === void 0 || onSlideMove(value);\n    },\n    onSlideEnd: () => {\n      rectRef.current = undefined;\n      onSlideEnd === null || onSlideEnd === void 0 || onSlideEnd();\n    },\n    onStepKeyDown: event => {\n      const slideDirection = isSlidingFromBottom ? 'from-bottom' : 'from-top';\n      const isBackKey = $faa2e61a3361514f$var$BACK_KEYS[slideDirection].includes(event.key);\n      onStepKeyDown === null || onStepKeyDown === void 0 || onStepKeyDown({\n        event: event,\n        direction: isBackKey ? -1 : 1\n      });\n    }\n  })));\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderImpl\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$SliderImpl = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSlider: __scopeSlider,\n    onSlideStart: onSlideStart,\n    onSlideMove: onSlideMove,\n    onSlideEnd: onSlideEnd,\n    onHomeKeyDown: onHomeKeyDown,\n    onEndKeyDown: onEndKeyDown,\n    onStepKeyDown: onStepKeyDown,\n    ...sliderProps\n  } = props;\n  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$SLIDER_NAME, __scopeSlider);\n  return /*#__PURE__*/$g1Vy2$createElement($g1Vy2$Primitive.span, $g1Vy2$babelruntimehelpersesmextends({}, sliderProps, {\n    ref: forwardedRef,\n    onKeyDown: $g1Vy2$composeEventHandlers(props.onKeyDown, event => {\n      if (event.key === 'Home') {\n        onHomeKeyDown(event); // Prevent scrolling to page start\n        event.preventDefault();\n      } else if (event.key === 'End') {\n        onEndKeyDown(event); // Prevent scrolling to page end\n        event.preventDefault();\n      } else if ($faa2e61a3361514f$var$PAGE_KEYS.concat($faa2e61a3361514f$var$ARROW_KEYS).includes(event.key)) {\n        onStepKeyDown(event); // Prevent scrolling for directional key presses\n        event.preventDefault();\n      }\n    }),\n    onPointerDown: $g1Vy2$composeEventHandlers(props.onPointerDown, event => {\n      const target = event.target;\n      target.setPointerCapture(event.pointerId); // Prevent browser focus behaviour because we focus a thumb manually when values change.\n      event.preventDefault(); // Touch devices have a delay before focusing so won't focus if touch immediately moves\n      // away from target (sliding). We want thumb to focus regardless.\n      if (context.thumbs.has(target)) target.focus();else onSlideStart(event);\n    }),\n    onPointerMove: $g1Vy2$composeEventHandlers(props.onPointerMove, event => {\n      const target = event.target;\n      if (target.hasPointerCapture(event.pointerId)) onSlideMove(event);\n    }),\n    onPointerUp: $g1Vy2$composeEventHandlers(props.onPointerUp, event => {\n      const target = event.target;\n      if (target.hasPointerCapture(event.pointerId)) {\n        target.releasePointerCapture(event.pointerId);\n        onSlideEnd(event);\n      }\n    })\n  }));\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderTrack\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$TRACK_NAME = 'SliderTrack';\nconst $faa2e61a3361514f$export$105594979f116971 = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSlider: __scopeSlider,\n    ...trackProps\n  } = props;\n  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$TRACK_NAME, __scopeSlider);\n  return /*#__PURE__*/$g1Vy2$createElement($g1Vy2$Primitive.span, $g1Vy2$babelruntimehelpersesmextends({\n    \"data-disabled\": context.disabled ? '' : undefined,\n    \"data-orientation\": context.orientation\n  }, trackProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\nObject.assign($faa2e61a3361514f$export$105594979f116971, {\n  displayName: $faa2e61a3361514f$var$TRACK_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderRange\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$RANGE_NAME = 'SliderRange';\nconst $faa2e61a3361514f$export$a5cf38a7a000fe77 = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSlider: __scopeSlider,\n    ...rangeProps\n  } = props;\n  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$RANGE_NAME, __scopeSlider);\n  const orientation = $faa2e61a3361514f$var$useSliderOrientationContext($faa2e61a3361514f$var$RANGE_NAME, __scopeSlider);\n  const ref = $g1Vy2$useRef(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, ref);\n  const valuesCount = context.values.length;\n  const percentages = context.values.map(value => $faa2e61a3361514f$var$convertValueToPercentage(value, context.min, context.max));\n  const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;\n  const offsetEnd = 100 - Math.max(...percentages);\n  return /*#__PURE__*/$g1Vy2$createElement($g1Vy2$Primitive.span, $g1Vy2$babelruntimehelpersesmextends({\n    \"data-orientation\": context.orientation,\n    \"data-disabled\": context.disabled ? '' : undefined\n  }, rangeProps, {\n    ref: composedRefs,\n    style: {\n      ...props.style,\n      [orientation.startEdge]: offsetStart + '%',\n      [orientation.endEdge]: offsetEnd + '%'\n    }\n  }));\n});\n/*#__PURE__*/\nObject.assign($faa2e61a3361514f$export$a5cf38a7a000fe77, {\n  displayName: $faa2e61a3361514f$var$RANGE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderThumb\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$THUMB_NAME = 'SliderThumb';\nconst $faa2e61a3361514f$export$2c1b491743890dec = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const getItems = $faa2e61a3361514f$var$useCollection(props.__scopeSlider);\n  const [thumb, setThumb] = $g1Vy2$useState(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, node => setThumb(node));\n  const index = $g1Vy2$useMemo(() => thumb ? getItems().findIndex(item => item.ref.current === thumb) : -1, [getItems, thumb]);\n  return /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderThumbImpl, $g1Vy2$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs,\n    index: index\n  }));\n});\nconst $faa2e61a3361514f$var$SliderThumbImpl = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSlider: __scopeSlider,\n    index: index,\n    ...thumbProps\n  } = props;\n  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$THUMB_NAME, __scopeSlider);\n  const orientation = $faa2e61a3361514f$var$useSliderOrientationContext($faa2e61a3361514f$var$THUMB_NAME, __scopeSlider);\n  const [thumb, setThumb] = $g1Vy2$useState(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, node => setThumb(node));\n  const size = $g1Vy2$useSize(thumb); // We cast because index could be `-1` which would return undefined\n  const value = context.values[index];\n  const percent = value === undefined ? 0 : $faa2e61a3361514f$var$convertValueToPercentage(value, context.min, context.max);\n  const label = $faa2e61a3361514f$var$getLabel(index, context.values.length);\n  const orientationSize = size === null || size === void 0 ? void 0 : size[orientation.size];\n  const thumbInBoundsOffset = orientationSize ? $faa2e61a3361514f$var$getThumbInBoundsOffset(orientationSize, percent, orientation.direction) : 0;\n  $g1Vy2$useEffect(() => {\n    if (thumb) {\n      context.thumbs.add(thumb);\n      return () => {\n        context.thumbs.delete(thumb);\n      };\n    }\n  }, [thumb, context.thumbs]);\n  return /*#__PURE__*/$g1Vy2$createElement(\"span\", {\n    style: {\n      transform: 'var(--radix-slider-thumb-transform)',\n      position: 'absolute',\n      [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`\n    }\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$Collection.ItemSlot, {\n    scope: props.__scopeSlider\n  }, /*#__PURE__*/$g1Vy2$createElement($g1Vy2$Primitive.span, $g1Vy2$babelruntimehelpersesmextends({\n    role: \"slider\",\n    \"aria-label\": props['aria-label'] || label,\n    \"aria-valuemin\": context.min,\n    \"aria-valuenow\": value,\n    \"aria-valuemax\": context.max,\n    \"aria-orientation\": context.orientation,\n    \"data-orientation\": context.orientation,\n    \"data-disabled\": context.disabled ? '' : undefined,\n    tabIndex: context.disabled ? undefined : 0\n  }, thumbProps, {\n    ref: composedRefs,\n    style: value === undefined ? {\n      display: 'none'\n    } : props.style,\n    onFocus: $g1Vy2$composeEventHandlers(props.onFocus, () => {\n      context.valueIndexToChangeRef.current = index;\n    })\n  }))));\n});\n/*#__PURE__*/\nObject.assign($faa2e61a3361514f$export$2c1b491743890dec, {\n  displayName: $faa2e61a3361514f$var$THUMB_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$BubbleInput = props => {\n  const {\n    value: value,\n    ...inputProps\n  } = props;\n  const ref = $g1Vy2$useRef(null);\n  const prevValue = $g1Vy2$usePrevious(value); // Bubble value change to parents (e.g form change event)\n  $g1Vy2$useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value');\n    const setValue = descriptor.set;\n    if (prevValue !== value && setValue) {\n      const event = new Event('input', {\n        bubbles: true\n      });\n      setValue.call(input, value);\n      input.dispatchEvent(event);\n    }\n  }, [prevValue, value]);\n  /**\n  * We purposefully do not use `type=\"hidden\"` here otherwise forms that\n  * wrap it will not be able to access its value via the FormData API.\n  *\n  * We purposefully do not add the `value` attribute here to allow the value\n  * to be set programatically and bubble to any parent form `onChange` event.\n  * Adding the `value` will cause React to consider the programatic\n  * dispatch a duplicate and it will get swallowed.\n  */\n  return /*#__PURE__*/$g1Vy2$createElement(\"input\", $g1Vy2$babelruntimehelpersesmextends({\n    style: {\n      display: 'none'\n    }\n  }, inputProps, {\n    ref: ref,\n    defaultValue: value\n  }));\n};\nfunction $faa2e61a3361514f$var$getNextSortedValues(prevValues = [], nextValue, atIndex) {\n  const nextValues = [...prevValues];\n  nextValues[atIndex] = nextValue;\n  return nextValues.sort((a, b) => a - b);\n}\nfunction $faa2e61a3361514f$var$convertValueToPercentage(value, min, max) {\n  const maxSteps = max - min;\n  const percentPerStep = 100 / maxSteps;\n  const percentage = percentPerStep * (value - min);\n  return $g1Vy2$clamp(percentage, [0, 100]);\n}\n/**\n * Returns a label for each thumb when there are two or more thumbs\n */\nfunction $faa2e61a3361514f$var$getLabel(index, totalValues) {\n  if (totalValues > 2) return `Value ${index + 1} of ${totalValues}`;else if (totalValues === 2) return ['Minimum', 'Maximum'][index];else return undefined;\n}\n/**\n * Given a `values` array and a `nextValue`, determine which value in\n * the array is closest to `nextValue` and return its index.\n *\n * @example\n * // returns 1\n * getClosestValueIndex([10, 30], 25);\n */\nfunction $faa2e61a3361514f$var$getClosestValueIndex(values, nextValue) {\n  if (values.length === 1) return 0;\n  const distances = values.map(value => Math.abs(value - nextValue));\n  const closestDistance = Math.min(...distances);\n  return distances.indexOf(closestDistance);\n}\n/**\n * Offsets the thumb centre point while sliding to ensure it remains\n * within the bounds of the slider when reaching the edges\n */\nfunction $faa2e61a3361514f$var$getThumbInBoundsOffset(width, left, direction) {\n  const halfWidth = width / 2;\n  const halfPercent = 50;\n  const offset = $faa2e61a3361514f$var$linearScale([0, halfPercent], [0, halfWidth]);\n  return (halfWidth - offset(left) * direction) * direction;\n}\n/**\n * Gets an array of steps between each value.\n *\n * @example\n * // returns [1, 9]\n * getStepsBetweenValues([10, 11, 20]);\n */\nfunction $faa2e61a3361514f$var$getStepsBetweenValues(values) {\n  return values.slice(0, -1).map((value, index) => values[index + 1] - value);\n}\n/**\n * Verifies the minimum steps between all values is greater than or equal\n * to the expected minimum steps.\n *\n * @example\n * // returns false\n * hasMinStepsBetweenValues([1,2,3], 2);\n *\n * @example\n * // returns true\n * hasMinStepsBetweenValues([1,2,3], 1);\n */\nfunction $faa2e61a3361514f$var$hasMinStepsBetweenValues(values, minStepsBetweenValues) {\n  if (minStepsBetweenValues > 0) {\n    const stepsBetweenValues = $faa2e61a3361514f$var$getStepsBetweenValues(values);\n    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);\n    return actualMinStepsBetweenValues >= minStepsBetweenValues;\n  }\n  return true;\n} // https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction $faa2e61a3361514f$var$linearScale(input, output) {\n  return value => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction $faa2e61a3361514f$var$getDecimalCount(value) {\n  return (String(value).split('.')[1] || '').length;\n}\nfunction $faa2e61a3361514f$var$roundValue(value, decimalCount) {\n  const rounder = Math.pow(10, decimalCount);\n  return Math.round(value * rounder) / rounder;\n}\nconst $faa2e61a3361514f$export$be92b6f5f03c0fe9 = $faa2e61a3361514f$export$472062a354075cee;\nconst $faa2e61a3361514f$export$13921ac0cc260818 = $faa2e61a3361514f$export$105594979f116971;\nconst $faa2e61a3361514f$export$9a58ef0d7ad3278c = $faa2e61a3361514f$export$a5cf38a7a000fe77;\nconst $faa2e61a3361514f$export$6521433ed15a34db = $faa2e61a3361514f$export$2c1b491743890dec;\nexport { $faa2e61a3361514f$export$ef72632d7b901f97 as createSliderScope, $faa2e61a3361514f$export$472062a354075cee as Slider, $faa2e61a3361514f$export$105594979f116971 as SliderTrack, $faa2e61a3361514f$export$a5cf38a7a000fe77 as SliderRange, $faa2e61a3361514f$export$2c1b491743890dec as SliderThumb, $faa2e61a3361514f$export$be92b6f5f03c0fe9 as Root, $faa2e61a3361514f$export$13921ac0cc260818 as Track, $faa2e61a3361514f$export$9a58ef0d7ad3278c as Range, $faa2e61a3361514f$export$6521433ed15a34db as Thumb };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}