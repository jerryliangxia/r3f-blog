{"ast":null,"code":"var _jsxFileName = \"/Users/jerryxia/Documents/PersonalProjects/Portfolio/r3f-blog/src/components/game/components/Venom.js\",\n  _s = $RefreshSig$();\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nCommand: npx gltfjsx@6.2.13 public/models/animated_spiderman_ps5.glb \n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useGameStore } from \"./Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Venom(props) {\n  _s();\n  const group = useRef();\n  const {\n    nodes,\n    materials,\n    animations\n  } = useGLTF(\"models/animated_venom_ps5.glb\");\n  const {\n    characterState,\n    setCharacterState\n  } = useGameStore(state => ({\n    characterState: state.characterState,\n    setCharacterState: state.setCharacterState\n  }));\n  const {\n    actions\n  } = useAnimations(animations, group);\n  const actionRef = useRef();\n  useEffect(() => {\n    if (actions[characterState]) {\n      actionRef.current = actions[characterState];\n      actionRef.current.reset().fadeIn(0.2).play();\n    }\n    return () => {\n      if (actionRef.current) {\n        actionRef.current.fadeOut(0.2);\n      }\n    };\n  }, [characterState]);\n  useFrame(() => {\n    // console.log(group.current.position);\n    if (group.current.position.y > 0.1) {\n      console.log(\"Hello jumping\");\n      setCharacterState(\"Jump\");\n    } else if (group.current.position.y < 0) {\n      console.log(\"Hello landing\");\n      setCharacterState(\"Land\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Scene\",\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        name: \"Armature\",\n        rotation: [Math.PI / 2, 0, 0],\n        scale: 0.999,\n        children: [/*#__PURE__*/_jsxDEV(\"primitive\", {\n          object: nodes.mixamorigHips\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n          name: \"Venom001\",\n          children: [/*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n            name: \"Venommesh\",\n            geometry: nodes.Venommesh.geometry,\n            material: materials.Black,\n            skeleton: nodes.Venommesh.skeleton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n            name: \"Venommesh_1\",\n            geometry: nodes.Venommesh_1.geometry,\n            material: materials[\"White.001\"],\n            skeleton: nodes.Venommesh_1.skeleton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n            name: \"Venommesh_2\",\n            geometry: nodes.Venommesh_2.geometry,\n            material: materials.Red,\n            skeleton: nodes.Venommesh_2.skeleton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Venom, \"U49eKcB9R0zHg3UqNxnEUJms1pY=\", false, function () {\n  return [useGLTF, useGameStore, useAnimations, useFrame];\n});\n_c = Venom;\nexport default Venom;\nuseGLTF.preload(\"models/animated_venom_ps5.glb\");\nvar _c;\n$RefreshReg$(_c, \"Venom\");","map":{"version":3,"names":["React","useRef","useEffect","useFrame","useGLTF","useAnimations","useGameStore","jsxDEV","_jsxDEV","Venom","props","_s","group","nodes","materials","animations","characterState","setCharacterState","state","actions","actionRef","current","reset","fadeIn","play","fadeOut","position","y","console","log","ref","dispose","children","name","rotation","Math","PI","scale","object","mixamorigHips","fileName","_jsxFileName","lineNumber","columnNumber","geometry","Venommesh","material","Black","skeleton","Venommesh_1","Venommesh_2","Red","_c","preload","$RefreshReg$"],"sources":["/Users/jerryxia/Documents/PersonalProjects/Portfolio/r3f-blog/src/components/game/components/Venom.js"],"sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nCommand: npx gltfjsx@6.2.13 public/models/animated_spiderman_ps5.glb \n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useGameStore } from \"./Store\";\n\nexport function Venom(props) {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\n    \"models/animated_venom_ps5.glb\"\n  );\n  const { characterState, setCharacterState } = useGameStore((state) => ({\n    characterState: state.characterState,\n    setCharacterState: state.setCharacterState,\n  }));\n\n  const { actions } = useAnimations(animations, group);\n\n  const actionRef = useRef();\n\n  useEffect(() => {\n    if (actions[characterState]) {\n      actionRef.current = actions[characterState];\n      actionRef.current.reset().fadeIn(0.2).play();\n    }\n    return () => {\n      if (actionRef.current) {\n        actionRef.current.fadeOut(0.2);\n      }\n    };\n  }, [characterState]);\n\n  useFrame(() => {\n    // console.log(group.current.position);\n    if (group.current.position.y > 0.1) {\n      console.log(\"Hello jumping\");\n      setCharacterState(\"Jump\");\n    } else if (group.current.position.y < 0) {\n      console.log(\"Hello landing\");\n      setCharacterState(\"Land\");\n    }\n  });\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group name=\"Scene\">\n        <group name=\"Armature\" rotation={[Math.PI / 2, 0, 0]} scale={0.999}>\n          <primitive object={nodes.mixamorigHips} />\n          <group name=\"Venom001\">\n            <skinnedMesh\n              name=\"Venommesh\"\n              geometry={nodes.Venommesh.geometry}\n              material={materials.Black}\n              skeleton={nodes.Venommesh.skeleton}\n            />\n            <skinnedMesh\n              name=\"Venommesh_1\"\n              geometry={nodes.Venommesh_1.geometry}\n              material={materials[\"White.001\"]}\n              skeleton={nodes.Venommesh_1.skeleton}\n            />\n            <skinnedMesh\n              name=\"Venommesh_2\"\n              geometry={nodes.Venommesh_2.geometry}\n              material={materials.Red}\n              skeleton={nodes.Venommesh_2.skeleton}\n            />\n          </group>\n        </group>\n      </group>\n    </group>\n  );\n}\n\nexport default Venom;\n\nuseGLTF.preload(\"models/animated_venom_ps5.glb\");\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}