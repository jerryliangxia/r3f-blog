{"ast":null,"code":"import $1bpvS$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $1bpvS$forwardRef, useState as $1bpvS$useState, useRef as $1bpvS$useRef, useEffect as $1bpvS$useEffect, createElement as $1bpvS$createElement } from \"react\";\nimport { useComposedRefs as $1bpvS$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $1bpvS$createContextScope } from \"@radix-ui/react-context\";\nimport { composeEventHandlers as $1bpvS$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState as $1bpvS$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious as $1bpvS$usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize as $1bpvS$useSize } from \"@radix-ui/react-use-size\";\nimport { Presence as $1bpvS$Presence } from \"@radix-ui/react-presence\";\nimport { Primitive as $1bpvS$Primitive } from \"@radix-ui/react-primitive\";\n\n/* -------------------------------------------------------------------------------------------------\n * Checkbox\n * -----------------------------------------------------------------------------------------------*/\nconst $e698a72e93240346$var$CHECKBOX_NAME = 'Checkbox';\nconst [$e698a72e93240346$var$createCheckboxContext, $e698a72e93240346$export$b566c4ff5488ea01] = $1bpvS$createContextScope($e698a72e93240346$var$CHECKBOX_NAME);\nconst [$e698a72e93240346$var$CheckboxProvider, $e698a72e93240346$var$useCheckboxContext] = $e698a72e93240346$var$createCheckboxContext($e698a72e93240346$var$CHECKBOX_NAME);\nconst $e698a72e93240346$export$48513f6b9f8ce62d = /*#__PURE__*/$1bpvS$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeCheckbox: __scopeCheckbox,\n    name: name,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    required: required,\n    disabled: disabled,\n    value = 'on',\n    onCheckedChange: onCheckedChange,\n    ...checkboxProps\n  } = props;\n  const [button, setButton] = $1bpvS$useState(null);\n  const composedRefs = $1bpvS$useComposedRefs(forwardedRef, node => setButton(node));\n  const hasConsumerStoppedPropagationRef = $1bpvS$useRef(false); // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = button ? Boolean(button.closest('form')) : true;\n  const [checked = false, setChecked] = $1bpvS$useControllableState({\n    prop: checkedProp,\n    defaultProp: defaultChecked,\n    onChange: onCheckedChange\n  });\n  const initialCheckedStateRef = $1bpvS$useRef(checked);\n  $1bpvS$useEffect(() => {\n    const form = button === null || button === void 0 ? void 0 : button.form;\n    if (form) {\n      const reset = () => setChecked(initialCheckedStateRef.current);\n      form.addEventListener('reset', reset);\n      return () => form.removeEventListener('reset', reset);\n    }\n  }, [button, setChecked]);\n  return /*#__PURE__*/$1bpvS$createElement($e698a72e93240346$var$CheckboxProvider, {\n    scope: __scopeCheckbox,\n    state: checked,\n    disabled: disabled\n  }, /*#__PURE__*/$1bpvS$createElement($1bpvS$Primitive.button, $1bpvS$babelruntimehelpersesmextends({\n    type: \"button\",\n    role: \"checkbox\",\n    \"aria-checked\": $e698a72e93240346$var$isIndeterminate(checked) ? 'mixed' : checked,\n    \"aria-required\": required,\n    \"data-state\": $e698a72e93240346$var$getState(checked),\n    \"data-disabled\": disabled ? '' : undefined,\n    disabled: disabled,\n    value: value\n  }, checkboxProps, {\n    ref: composedRefs,\n    onKeyDown: $1bpvS$composeEventHandlers(props.onKeyDown, event => {\n      // According to WAI ARIA, Checkboxes don't activate on enter keypress\n      if (event.key === 'Enter') event.preventDefault();\n    }),\n    onClick: $1bpvS$composeEventHandlers(props.onClick, event => {\n      setChecked(prevChecked => $e698a72e93240346$var$isIndeterminate(prevChecked) ? true : !prevChecked);\n      if (isFormControl) {\n        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(); // if checkbox is in a form, stop propagation from the button so that we only propagate\n        // one click event (from the input). We propagate changes from an input so that native\n        // form validation works and form events reflect checkbox updates.\n        if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n      }\n    })\n  })), isFormControl && /*#__PURE__*/$1bpvS$createElement($e698a72e93240346$var$BubbleInput, {\n    control: button,\n    bubbles: !hasConsumerStoppedPropagationRef.current,\n    name: name,\n    value: value,\n    checked: checked,\n    required: required,\n    disabled: disabled // We transform because the input is absolutely positioned but we have\n    ,\n\n    style: {\n      transform: 'translateX(-100%)'\n    }\n  }));\n});\n/*#__PURE__*/\nObject.assign($e698a72e93240346$export$48513f6b9f8ce62d, {\n  displayName: $e698a72e93240346$var$CHECKBOX_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * CheckboxIndicator\n * -----------------------------------------------------------------------------------------------*/\nconst $e698a72e93240346$var$INDICATOR_NAME = 'CheckboxIndicator';\nconst $e698a72e93240346$export$59aad738f51d1c05 = /*#__PURE__*/$1bpvS$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeCheckbox: __scopeCheckbox,\n    forceMount: forceMount,\n    ...indicatorProps\n  } = props;\n  const context = $e698a72e93240346$var$useCheckboxContext($e698a72e93240346$var$INDICATOR_NAME, __scopeCheckbox);\n  return /*#__PURE__*/$1bpvS$createElement($1bpvS$Presence, {\n    present: forceMount || $e698a72e93240346$var$isIndeterminate(context.state) || context.state === true\n  }, /*#__PURE__*/$1bpvS$createElement($1bpvS$Primitive.span, $1bpvS$babelruntimehelpersesmextends({\n    \"data-state\": $e698a72e93240346$var$getState(context.state),\n    \"data-disabled\": context.disabled ? '' : undefined\n  }, indicatorProps, {\n    ref: forwardedRef,\n    style: {\n      pointerEvents: 'none',\n      ...props.style\n    }\n  })));\n});\n/*#__PURE__*/\nObject.assign($e698a72e93240346$export$59aad738f51d1c05, {\n  displayName: $e698a72e93240346$var$INDICATOR_NAME\n});\n/* ---------------------------------------------------------------------------------------------- */\nconst $e698a72e93240346$var$BubbleInput = props => {\n  const {\n    control: control,\n    checked: checked,\n    bubbles = true,\n    ...inputProps\n  } = props;\n  const ref = $1bpvS$useRef(null);\n  const prevChecked = $1bpvS$usePrevious(checked);\n  const controlSize = $1bpvS$useSize(control); // Bubble checked change to parents (e.g form change event)\n  $1bpvS$useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked');\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', {\n        bubbles: bubbles\n      });\n      input.indeterminate = $e698a72e93240346$var$isIndeterminate(checked);\n      setChecked.call(input, $e698a72e93240346$var$isIndeterminate(checked) ? false : checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n  return /*#__PURE__*/$1bpvS$createElement(\"input\", $1bpvS$babelruntimehelpersesmextends({\n    type: \"checkbox\",\n    \"aria-hidden\": true,\n    defaultChecked: $e698a72e93240346$var$isIndeterminate(checked) ? false : checked\n  }, inputProps, {\n    tabIndex: -1,\n    ref: ref,\n    style: {\n      ...props.style,\n      ...controlSize,\n      position: 'absolute',\n      pointerEvents: 'none',\n      opacity: 0,\n      margin: 0\n    }\n  }));\n};\nfunction $e698a72e93240346$var$isIndeterminate(checked) {\n  return checked === 'indeterminate';\n}\nfunction $e698a72e93240346$var$getState(checked) {\n  return $e698a72e93240346$var$isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\nconst $e698a72e93240346$export$be92b6f5f03c0fe9 = $e698a72e93240346$export$48513f6b9f8ce62d;\nconst $e698a72e93240346$export$adb584737d712b70 = $e698a72e93240346$export$59aad738f51d1c05;\nexport { $e698a72e93240346$export$b566c4ff5488ea01 as createCheckboxScope, $e698a72e93240346$export$48513f6b9f8ce62d as Checkbox, $e698a72e93240346$export$59aad738f51d1c05 as CheckboxIndicator, $e698a72e93240346$export$be92b6f5f03c0fe9 as Root, $e698a72e93240346$export$adb584737d712b70 as Indicator };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}