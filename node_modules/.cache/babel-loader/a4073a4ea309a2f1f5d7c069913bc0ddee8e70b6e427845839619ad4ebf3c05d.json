{"ast":null,"code":"import $irPIl$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $irPIl$forwardRef, useState as $irPIl$useState, useRef as $irPIl$useRef, createElement as $irPIl$createElement, useEffect as $irPIl$useEffect } from \"react\";\nimport { composeEventHandlers as $irPIl$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs as $irPIl$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $irPIl$createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState as $irPIl$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious as $irPIl$usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize as $irPIl$useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive as $irPIl$Primitive } from \"@radix-ui/react-primitive\";\n\n/* -------------------------------------------------------------------------------------------------\n * Switch\n * -----------------------------------------------------------------------------------------------*/\nconst $6be4966fd9bbc698$var$SWITCH_NAME = 'Switch';\nconst [$6be4966fd9bbc698$var$createSwitchContext, $6be4966fd9bbc698$export$cf7f5f17f69cbd43] = $irPIl$createContextScope($6be4966fd9bbc698$var$SWITCH_NAME);\nconst [$6be4966fd9bbc698$var$SwitchProvider, $6be4966fd9bbc698$var$useSwitchContext] = $6be4966fd9bbc698$var$createSwitchContext($6be4966fd9bbc698$var$SWITCH_NAME);\nconst $6be4966fd9bbc698$export$b5d5cf8927ab7262 = /*#__PURE__*/$irPIl$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSwitch: __scopeSwitch,\n    name: name,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    required: required,\n    disabled: disabled,\n    value = 'on',\n    onCheckedChange: onCheckedChange,\n    ...switchProps\n  } = props;\n  const [button, setButton] = $irPIl$useState(null);\n  const composedRefs = $irPIl$useComposedRefs(forwardedRef, node => setButton(node));\n  const hasConsumerStoppedPropagationRef = $irPIl$useRef(false); // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = button ? Boolean(button.closest('form')) : true;\n  const [checked = false, setChecked] = $irPIl$useControllableState({\n    prop: checkedProp,\n    defaultProp: defaultChecked,\n    onChange: onCheckedChange\n  });\n  return /*#__PURE__*/$irPIl$createElement($6be4966fd9bbc698$var$SwitchProvider, {\n    scope: __scopeSwitch,\n    checked: checked,\n    disabled: disabled\n  }, /*#__PURE__*/$irPIl$createElement($irPIl$Primitive.button, $irPIl$babelruntimehelpersesmextends({\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": checked,\n    \"aria-required\": required,\n    \"data-state\": $6be4966fd9bbc698$var$getState(checked),\n    \"data-disabled\": disabled ? '' : undefined,\n    disabled: disabled,\n    value: value\n  }, switchProps, {\n    ref: composedRefs,\n    onClick: $irPIl$composeEventHandlers(props.onClick, event => {\n      setChecked(prevChecked => !prevChecked);\n      if (isFormControl) {\n        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(); // if switch is in a form, stop propagation from the button so that we only propagate\n        // one click event (from the input). We propagate changes from an input so that native\n        // form validation works and form events reflect switch updates.\n        if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n      }\n    })\n  })), isFormControl && /*#__PURE__*/$irPIl$createElement($6be4966fd9bbc698$var$BubbleInput, {\n    control: button,\n    bubbles: !hasConsumerStoppedPropagationRef.current,\n    name: name,\n    value: value,\n    checked: checked,\n    required: required,\n    disabled: disabled // We transform because the input is absolutely positioned but we have\n    ,\n\n    style: {\n      transform: 'translateX(-100%)'\n    }\n  }));\n});\n/*#__PURE__*/\nObject.assign($6be4966fd9bbc698$export$b5d5cf8927ab7262, {\n  displayName: $6be4966fd9bbc698$var$SWITCH_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SwitchThumb\n * -----------------------------------------------------------------------------------------------*/\nconst $6be4966fd9bbc698$var$THUMB_NAME = 'SwitchThumb';\nconst $6be4966fd9bbc698$export$4d07bf653ea69106 = /*#__PURE__*/$irPIl$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSwitch: __scopeSwitch,\n    ...thumbProps\n  } = props;\n  const context = $6be4966fd9bbc698$var$useSwitchContext($6be4966fd9bbc698$var$THUMB_NAME, __scopeSwitch);\n  return /*#__PURE__*/$irPIl$createElement($irPIl$Primitive.span, $irPIl$babelruntimehelpersesmextends({\n    \"data-state\": $6be4966fd9bbc698$var$getState(context.checked),\n    \"data-disabled\": context.disabled ? '' : undefined\n  }, thumbProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\nObject.assign($6be4966fd9bbc698$export$4d07bf653ea69106, {\n  displayName: $6be4966fd9bbc698$var$THUMB_NAME\n});\n/* ---------------------------------------------------------------------------------------------- */\nconst $6be4966fd9bbc698$var$BubbleInput = props => {\n  const {\n    control: control,\n    checked: checked,\n    bubbles = true,\n    ...inputProps\n  } = props;\n  const ref = $irPIl$useRef(null);\n  const prevChecked = $irPIl$usePrevious(checked);\n  const controlSize = $irPIl$useSize(control); // Bubble checked change to parents (e.g form change event)\n  $irPIl$useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked');\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', {\n        bubbles: bubbles\n      });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n  return /*#__PURE__*/$irPIl$createElement(\"input\", $irPIl$babelruntimehelpersesmextends({\n    type: \"checkbox\",\n    \"aria-hidden\": true,\n    defaultChecked: checked\n  }, inputProps, {\n    tabIndex: -1,\n    ref: ref,\n    style: {\n      ...props.style,\n      ...controlSize,\n      position: 'absolute',\n      pointerEvents: 'none',\n      opacity: 0,\n      margin: 0\n    }\n  }));\n};\nfunction $6be4966fd9bbc698$var$getState(checked) {\n  return checked ? 'checked' : 'unchecked';\n}\nconst $6be4966fd9bbc698$export$be92b6f5f03c0fe9 = $6be4966fd9bbc698$export$b5d5cf8927ab7262;\nconst $6be4966fd9bbc698$export$6521433ed15a34db = $6be4966fd9bbc698$export$4d07bf653ea69106;\nexport { $6be4966fd9bbc698$export$cf7f5f17f69cbd43 as createSwitchScope, $6be4966fd9bbc698$export$b5d5cf8927ab7262 as Switch, $6be4966fd9bbc698$export$4d07bf653ea69106 as SwitchThumb, $6be4966fd9bbc698$export$be92b6f5f03c0fe9 as Root, $6be4966fd9bbc698$export$6521433ed15a34db as Thumb };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}