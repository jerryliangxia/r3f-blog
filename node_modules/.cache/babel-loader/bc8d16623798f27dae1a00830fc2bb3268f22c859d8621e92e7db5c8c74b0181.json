{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as HoverCardPrimitive from '@radix-ui/react-hover-card';\nimport { hoverCardContentPropDefs } from './hover-card.props';\nimport { withBreakpoints } from '../helpers';\nimport { Theme } from '../theme';\nconst HoverCardRoot = props => React.createElement(HoverCardPrimitive.Root, {\n  closeDelay: 150,\n  openDelay: 200,\n  ...props\n});\nHoverCardRoot.displayName = 'HoverCardRoot';\nconst HoverCardTrigger = React.forwardRef((props, forwardedRef) => React.createElement(HoverCardPrimitive.Trigger, {\n  ref: forwardedRef,\n  className: classNames('rt-HoverCardTrigger', props.className),\n  ...props,\n  asChild: true\n}));\nHoverCardTrigger.displayName = 'HoverCardTrigger';\nconst HoverCardContent = React.forwardRef((props, forwardedRef) => {\n  const {\n    className,\n    forceMount,\n    container,\n    size = hoverCardContentPropDefs.size.default,\n    ...contentProps\n  } = props;\n  return React.createElement(HoverCardPrimitive.Portal, {\n    container: container,\n    forceMount: forceMount\n  }, React.createElement(Theme, {\n    asChild: true\n  }, React.createElement(HoverCardPrimitive.Content, {\n    align: \"start\",\n    sideOffset: 8,\n    collisionPadding: 10,\n    ...contentProps,\n    ref: forwardedRef,\n    className: classNames('rt-PopperContent', 'rt-HoverCardContent', className, withBreakpoints(size, 'rt-r-size'))\n  })));\n});\nHoverCardContent.displayName = 'HoverCardContent';\nconst HoverCard = Object.assign({}, {\n  Root: HoverCardRoot,\n  Trigger: HoverCardTrigger,\n  Content: HoverCardContent\n});\nexport { HoverCard, HoverCardRoot, HoverCardTrigger, HoverCardContent };\n//# sourceMappingURL=hover-card.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}